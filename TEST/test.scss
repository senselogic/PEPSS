/*
    comment
*/

$variable_123: 0;    // :

@function func_123(    // @function
    $first_argument_1_2_3
    )
{
    @return $first_argument_1_2_3 + 1;    // @return
}

@mixin rule_123(    // @mixin
    $first_argument_1_2_3: $variable_123,    // :
    $second_argument_1_2_3: $first_argument_1_2_3 * 2 + func_123( $variable_123 )    // :
    )
{
    $first_argument_1_2_3
    $second_argument_1_2_3
}

$a: 10;    // :
$b: ( ( $a + 1 ) * 2 - 2 ) / 2;    // :
$a: 10;    // :
$c: $b;    // :

$a $b $c
#{$a}#{$b}px    // #{$a}#{$b}px

$s: '#{$a}#{$b}px';    // #{$a}#{$b}px
@import 'test_include.scss';    // @import scss

.test
{
    $a
}

@function test(    // @function
    $x,
    $y
    )
{
    @return $x + $y;    // @return
}

@mixin test
{
}

@mixin test(    // @mixin
    $x,
    $y,
    $z
    )
{
    @include test;    // @include
    @include %test;    // @include
    $w: test( $x, $y ) + $z;    // :
}

@mixin test    // @mixin
{
    @include test( 1, 2, 3 );    // @include
}

.test2
{
    @extend test;    // @extend
    @include test( $a, $b, $c);    // @include
}

@if $a < $b    // @if
{
    $a $b
}

@else if $a > $b    // @else if
{
    $a $b
}

@else // @else
{
    $a $b
}


@include media( small_min )
{
    $a: 1;    // @include media( small_min ) { $a: 1; }
}

@include media( "( max-width: #{$media_largest_max_em} )" )
{
    $b: 10;    // @include media( "( max-width: #{$media_largest_max_em} )" )
}

$c: -1;    // :

$colors: a, b, c;    // :

@each $color in $colors    // @each $color in $colors
{
}

@for $index from 1 through length( $colors )    // @for $index from 1 through length( $colors )
{
    $color: nth( $colors, $index );

    .test_#{$color}    // #{$color}
    {
        color : $color;
    }
}

@for $a from 1 through $b    // @for $a from 1 through $b
{
    $a $b $c
}

@for $a from 0 to $b    // @for $a from 0 to $b
{
    $a $b $c
}

$i: 6;    // :

@while $i > 0    // @while
{
    $i: $i - 2;    // :
}
